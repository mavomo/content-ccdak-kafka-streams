plugins {
    id 'application'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.apache.kafka:kafka-streams:3.5.1'
    implementation 'org.apache.kafka:kafka-clients:3.5.1'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.11.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.11.0'
    testImplementation 'org.assertj:assertj-core:3.26.3'
}
// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

application {
    mainClassName = 'com.linuxacademy.ccdak.streams.StreamsMain'
}

task(runStreams, dependsOn: 'classes', type: JavaExec) {
   mainClass = 'com.linuxacademy.ccdak.streams.StreamsMain'
   classpath = sourceSets.main.runtimeClasspath
}

task(runAggregations, dependsOn: 'classes', type: JavaExec) {
    mainClass = 'com.linuxacademy.ccdak.streams.AggregationsMain'
   classpath = sourceSets.main.runtimeClasspath
}

task(runJoins, dependsOn: 'classes', type: JavaExec) {
    mainClass = 'com.linuxacademy.ccdak.streams.JoinsMain'
   classpath = sourceSets.main.runtimeClasspath
}

task(runStatelessTransformations, dependsOn: 'classes', type: JavaExec) {
    mainClass = 'com.linuxacademy.ccdak.streams.StatelessTransformationsMain'
   classpath = sourceSets.main.runtimeClasspath
}

task(runWindowing, dependsOn: 'classes', type: JavaExec) {
    mainClass = 'com.linuxacademy.ccdak.streams.WindowingMain'
   classpath = sourceSets.main.runtimeClasspath
}
